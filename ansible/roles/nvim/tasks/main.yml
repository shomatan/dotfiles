---
- name: Install nvim dependencies (only RedHat)
  yum:
    name: ["python-pip", "fuse-libs"]
  when: ansible_facts['os_family'] == "RedHat"
  become: true

- name: Pre check neovim (only RedHat)
  stat:
    path: /usr/local/bin/nvim
  when: ansible_facts['os_family'] == "RedHat"
  register: neovim_stats

- name: Install neovim (only RedHat)
  block:
    - name: Get neovim (only RedHat)
      get_url:
        url: https://github.com/neovim/neovim/releases/download/stable/nvim.appimage
        dest: /tmp/nvim.appimage
        mode: 0755

    - name: Extract and move app image (only RedHat)
      shell: |
        ./nvim.appimage --appimage-extract
        mv squashfs-root /opt/nvim
      args:
        chdir: /tmp

    - name: Symlink neovim (only RedHat)
      file:
        src: /opt/nvim/AppRun
        dest: /usr/local/bin/nvim
        state: link
        force: yes
  when: ansible_facts['os_family'] == "RedHat" and not neovim_stats.stat.exists
  become: true

- name: Add neovim repository (only Debian)
  apt_repository:
    repo: ppa:neovim-ppa/stable
    state: present
    update_cache: true
  when: ansible_facts['os_family'] == "Debian"
  become: true

- name: Install neovim (only Debian)
  apt:
    name: neovim
  when: ansible_facts['os_family'] == "Debian"
  become: true

- name: Symlink neovim (only Debian)
  file:
    src: /usr/bin/nvim
    dest: /usr/local/bin/nvim
    state: link
    force: yes
  when: ansible_facts['os_family'] == "Debian"
  become: true

- name: Ensure ~/.local/share/nvim/site/autoload exists
  file:
    path: ~/.local/share/nvim/site/autoload
    state: directory
    mode: 0755
    recurse: yes

- name: Install nvim extension
  get_url:
    url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    dest: ~/.local/share/nvim/site/autoload/plug.vim

- name: Install nvim dependencies (only Debian)
  apt:
    name: python3-setuptools
  when: ansible_facts['os_family'] == "Debian"
  become: true

- name: Check pynvim is installed
  shell: pip3 list --user | grep 'pynvim'; echo $?
  register: pynvim_install_result
  changed_when: false

- name: Check pynvim needs upgrade
  shell: pip3 list --outdated --user | grep 'pynvim'; echo $?
  register: pynvim_upgrade_result
  changed_when: false

- name: Install pynvim
  pip:
    name: pynvim
    extra_args: '--user --upgrade'
  changed_when: pynvim_install_result.stdout == "1" or pynvim_upgrade_result.stdout.find("\n0") != -1

